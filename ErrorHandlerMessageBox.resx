<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picError.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>